apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
//apply plugin: 'findbugs'
//apply plugin: 'project-report'
//apply plugin: 'pmd'
apply plugin: 'application'
apply plugin: 'build-dashboard'
apply plugin: 'codenarc'


applicationDefaultJvmArgs = ["-Dfile.encoding=UTF=8"]

idea {
    project {
        jdkName = '1.7'
        languageLevel = '1.7'
    }
}

sourceSets {
    intTest
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }

    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }

    }

}

idea.project.ipr {
    beforeMerged { project ->
        project.modulePaths.clear()
    }
    withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}

idea.module.iml {
    beforeMerged { module ->
        module.dependencies.clear()
    }
    whenMerged { module ->
        module.dependencies*.exported = true
    }
}

//findbugsMain.reports {
//    xml.enabled false
//    html.enabled true
//}
//
//findbugsTest{
//    enabled = false
//}
//
//findbugsTest.reports {
//    xml.enabled false
//    html.enabled true
//}

project.tasks.test.configure {
    includes = ['**/*Test.class']
}

//test {
//    testLogging {
//        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
//    }
//    testLogging.showStandardStreams = true
//}

repositories {
    mavenCentral()
}

dependencies {
    /*Utils*/
    compile 'com.google.guava:guava:14.0.1'
    compile 'com.google.code.gson:gson:2.2.3'
    compile 'org.apache.httpcomponents:httpclient:4.2.5'
    compile 'junit:junit:4.11'
}

task wrapper(type: Wrapper) {
    gradleVersion = "1.7"
}

jar {
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    manifest {
        attributes ("Implementation-Version" : 1)
        attributes ("Main-Class" : "")
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}
